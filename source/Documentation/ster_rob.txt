=============================================================================
List of generated methods in project: main

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "AS1"       (component AsynchroSerial)
   - AS1_RecvChar -If any data is received, this method returns one character, otherwise it returns an error code (it does not 
                wait for data). This method is enabled only if the receiver property is enabled.  [Note:] Because the preferred 
                method to handle error and break exception in the interrupt mode is to use events <OnError> and <OnBreak> the 
                return value ERR_RXEMPTY has higher priority than other error codes. As a consequence the information about an 
                exception in interrupt mode is returned only if there is a valid character ready to be read.
   - AS1_SendChar -Sends one character to the channel. If the component is temporarily disabled (Disable method) SendChar 
                method only stores data into an output buffer. In case of a zero output buffer size, only one character can be 
                stored. Enabling the component (Enable method) starts the transmission of the stored data. This method is 
                available only if the transmitter property is enabled.
   - AS1_GetCharsInRxBuf -Returns the number of characters in the input buffer. This method is available only if the receiver 
                property is enabled.
   - AS1_GetCharsInTxBuf -Returns the number of characters in the output buffer. This method is available only if the 
                transmitter property is enabled.

Module "Bit1"      (component BitIO_LDD)
   - Bit1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value 
                then the device is also enabled(see the description of the Enable() method). In this case the Enable() method 
                is not necessary and needn't to be generated.
   - Bit1_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - Bit1_SetInput -Sets a pin direction to input (available only if the direction = _[input/output]_).
   - Bit1_PutVal -The specified output value is set. If the direction is <b>input</b>, the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                <tt>SetDir(TRUE)</tt>; see <a href="BitIOProperties.html#SafeMode">Safe mode</a> property for limitations). If 
                the direction is <b>output</b>, it writes the value to the pin. (Method is available only if the direction = 
                <u><tt>output</tt></u> or <u><tt>input/output</tt></u>).
   - Bit1_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "Cpu"       (component MK60FN1M0LQ15)

===================================================================================
